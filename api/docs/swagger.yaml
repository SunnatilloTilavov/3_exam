definitions:
  models.CreateUser:
    properties:
      Mail:
        type: string
      active:
        type: boolean
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      sex:
        type: string
    type: object
  models.Forgetpassword2:
    properties:
      mail:
        type: string
      otp_code:
        type: string
      password:
        type: string
    type: object
  models.GetAllUser:
    properties:
      Mail:
        type: string
      active:
        type: boolean
      createdAt:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone:
        type: string
      sex:
        type: string
      updatedAt:
        type: string
    type: object
  models.LoginUser:
    properties:
      Mail:
        type: string
      active:
        type: boolean
      first_name:
        type: string
      last_name:
        type: string
      mailcode:
        type: string
      password:
        type: string
      phone:
        type: string
      sex:
        type: string
    type: object
  models.PasswordUser:
    properties:
      Newpassword:
        type: string
      Oldpassword:
        type: string
      phone:
        type: string
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.UpdateStatus:
    properties:
      active:
        type: boolean
      id:
        type: string
    type: object
  models.UpdateUser:
    properties:
      Mail:
        type: string
      active:
        type: boolean
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone:
        type: string
      sex:
        type: string
    type: object
  models.UserLoginOTP:
    properties:
      mail:
        type: string
      otp_code:
        type: string
    type: object
  models.UserLoginRequest:
    properties:
      mail:
        type: string
      password:
        type: string
    type: object
  models.UserLoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.UserRegisterRequest:
    properties:
      mail:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /User:
    get:
      consumes:
      - application/json
      description: Get User list
      parameters:
      - description: page
        in: path
        name: page
        type: string
      - description: limit
        in: path
        name: limit
        type: string
      - description: search
        in: path
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get User list
      tags:
      - User
    post:
      consumes:
      - application/json
      description: This api is creates a new User and returns it's id
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: create a User
      tags:
      - User
  /User/{id}:
    delete:
      consumes:
      - application/json
      description: This api is delete a  User and returns it's id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: delete a User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: This api is update a  User and returns it's id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: update a User
      tags:
      - User
  /User/Forgetpassword:
    post:
      consumes:
      - application/json
      description: User Forgetpassword
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User Forgetpassword
      tags:
      - Forgetpassword
  /User/Forgetpassword2:
    post:
      consumes:
      - application/json
      description: User Forgetpassword 2
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.Forgetpassword2'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Forgetpassword2'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User Forgetpassword 2
      tags:
      - Forgetpassword
  /User/auth/create:
    post:
      consumes:
      - application/json
      description: User password check and create
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.LoginUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User password check and create
      tags:
      - auth
  /User/auth/loginotp:
    post:
      consumes:
      - application/json
      description: User otp code check and login
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginOTP'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserLoginOTP'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User otp code  check and login
      tags:
      - auth_otp
  /User/login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User login
      tags:
      - auth
  /User/loginotp:
    post:
      consumes:
      - application/json
      description: User login otp1
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User login otp1
      tags:
      - auth_otp
  /User/password:
    patch:
      consumes:
      - application/json
      description: This api is update password
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.PasswordUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PasswordUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: update password
      tags:
      - Password
  /User/register:
    post:
      consumes:
      - application/json
      description: User register
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User register
      tags:
      - auth
  /User/status/update/{id}:
    patch:
      consumes:
      - application/json
      description: This api is update status
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: update a User
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
